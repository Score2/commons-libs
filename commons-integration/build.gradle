dependencies {
    for (Project p : parent.getAllprojects()) {
        if (p.name == "commons-utils" || p.name == "commons-integration") continue

        implementation p
    }
}

shadowJar {
    dependencies {
        exclude(dependency('org.jetbrains.kotlin:kotlin-stdlib'))
        exclude(dependency('org.jetbrains.kotlin:kotlin-stdlib-common'))

        for (Project p : parent.getAllprojects()) {
            if (p.name == "commons-utils" || p.name == "commons-integration") continue

            /*for (DependencyResult dependencyResult : p.getConfigurations().getByName("compileClasspath").getIncoming().getResolutionResult().getAllDependencies()) {
                final ResolvedComponentResult from = dependencyResult.getFrom()
                println(from.toString())
            }*/


            include(dependency(p))
//            include("${group.toString()}:${p.name}:${archiveVersion.toString()}")
        }
    }

    archiveClassifier = null
}
publishing {
    publications {
        shadow(MavenPublication) { publication ->
            project.shadow.component(publication)
        }
    }
}